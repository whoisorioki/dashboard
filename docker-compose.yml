version: "3.8"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  postgres_data: {}

services:
  # --- PostgreSQL Database (Operational DB) ---
  postgres:
    image: postgres:15
    container_name: sales_analytics_db
    environment:
      POSTGRES_DB: sales_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Enter@321
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Druid Services ---
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.10
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  coordinator:
    image: apache/druid:33.0.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
      - ./druid/_common/common.runtime.properties:/opt/druid/conf/druid/_common/common.runtime.properties:ro
    depends_on:
      - zookeeper
    ports:
      - "8081:8081"
    command:
      - coordinator
    environment:
      - druid_zk_service_host=zookeeper
      - druid_extensions_loadList=["postgresql-metadata-storage", "druid-s3-extensions", "druid-multi-stage-query", "druid-datasketches"]
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/sales_analytics
      - druid_metadata_storage_connector_user=postgres
      - druid_metadata_storage_connector_password=Enter@321
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/druid/var/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/druid/var/logs
      - druid_s3_disableAcl=true
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIA5V23GCAIKMC65WWQ
      - AWS_SECRET_ACCESS_KEY=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

  broker:
    image: apache/druid:33.0.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
      - ./druid/_common/common.runtime.properties:/opt/druid/conf/druid/_common/common.runtime.properties:ro
    depends_on:
      - zookeeper
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    environment:
      - druid_zk_service_host=zookeeper
      - druid_extensions_loadList=["postgresql-metadata-storage", "druid-s3-extensions", "druid-multi-stage-query", "druid-datasketches"]
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/sales_analytics
      - druid_metadata_storage_connector_user=postgres
      - druid_metadata_storage_connector_password=Enter@321
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/druid/var/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/druid/var/logs
      - druid_s3_disableAcl=true
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIA5V23GCAIKMC65WWQ
      - AWS_SECRET_ACCESS_KEY=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

  historical:
    image: apache/druid:33.0.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
      - ./druid/_common/common.runtime.properties:/opt/druid/conf/druid/_common/common.runtime.properties:ro
    depends_on:
      - zookeeper
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    environment:
      - druid_zk_service_host=zookeeper
      - druid_extensions_loadList=["postgresql-metadata-storage", "druid-s3-extensions", "druid-multi-stage-query", "druid-datasketches"]
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/sales_analytics
      - druid_metadata_storage_connector_user=postgres
      - druid_metadata_storage_connector_password=Enter@321
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/druid/var/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/druid/var/logs
      - druid_s3_disableAcl=true
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIA5V23GCAIKMC65WWQ
      - AWS_SECRET_ACCESS_KEY=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


  middlemanager:
    image: apache/druid:33.0.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
      - ./druid/_common/common.runtime.properties:/opt/druid/conf/druid/_common/common.runtime.properties:ro
    depends_on:
      - zookeeper
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    environment:
      - druid_zk_service_host=zookeeper
      - druid_extensions_loadList=["postgresql-metadata-storage", "druid-s3-extensions", "druid-multi-stage-query", "druid-datasketches"]
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/sales_analytics
      - druid_metadata_storage_connector_user=postgres
      - druid_metadata_storage_connector_password=Enter@321
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/druid/var/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/druid/var/logs
      - druid_s3_disableAcl=true
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIA5V23GCAIKMC65WWQ
      - AWS_SECRET_ACCESS_KEY=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

  router:
    image: apache/druid:33.0.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
      - ./druid/_common/common.runtime.properties:/opt/druid/conf/druid/_common/common.runtime.properties:ro
    depends_on:
      - zookeeper
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    environment:
      - druid_zk_service_host=zookeeper
      - druid_extensions_loadList=["postgresql-metadata-storage", "druid-s3-extensions", "druid-multi-stage-query", "druid-datasketches"]
      - druid_metadata_storage_type=postgresql
      - druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/sales_analytics
      - druid_metadata_storage_connector_user=postgres
      - druid_metadata_storage_connector_password=Enter@321
      - druid_storage_type=local
      - druid_storage_storageDirectory=/opt/druid/var/segments
      - druid_indexer_logs_type=file
      - druid_indexer_logs_directory=/opt/druid/var/logs
      - druid_s3_disableAcl=true
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKIA5V23GCAIKMC65WWQ
      - AWS_SECRET_ACCESS_KEY=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


  # --- Backend API (FastAPI) ---
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sales_analytics_backend
    ports:
      - "8000:8000"
    env_file:
      - ./docker.env
    depends_on:
      postgres:
        condition: service_healthy
      router:
        condition: service_started
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # --- Frontend (React) ---
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: sales_analytics_frontend
    ports:
      - "3000:3000"
    env_file:
      - ./docker.env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
