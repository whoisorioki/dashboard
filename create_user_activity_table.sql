-- Create the user_activity table to log user actions
CREATE TABLE IF NOT EXISTS public.user_activity (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,
    action TEXT NOT NULL,
    timestamp TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    user_agent TEXT,
    ip_address INET,
    details JSONB
);

-- Add comments to the columns for clarity
COMMENT ON TABLE public.user_activity IS 'Logs user actions within the application for analytics and auditing.';
COMMENT ON COLUMN public.user_activity.user_id IS 'The ID of the user who performed the action. References the auth.users table.';
COMMENT ON COLUMN public.user_activity.action IS 'A description of the action performed (e.g., ''login'', ''view_dashboard'').';
COMMENT ON COLUMN public.user_activity.details IS 'A JSON object for storing any additional, action-specific details.';

-- Enable Row Level Security (RLS) on the table
-- This is a best practice in Supabase to ensure data is secure by default.
ALTER TABLE public.user_activity ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows users to view their own activity.
-- For now, we will restrict all access and manage it through the service role key on the backend.
-- If you need users to be able to read their own activity, you can create a policy like this:
-- CREATE POLICY "Allow users to view their own activity"
-- ON public.user_activity
-- FOR SELECT
-- USING (auth.uid() = user_id);

-- Create a policy to allow the service_role to perform all actions.
-- The backend will use the service role key, so it needs full access.
CREATE POLICY "Allow full access for service role"
ON public.user_activity
FOR ALL
USING (TRUE)
WITH CHECK (TRUE);
